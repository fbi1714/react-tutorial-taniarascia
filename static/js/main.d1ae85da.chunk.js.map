{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","this","onSubmit","for","type","id","onChange","React","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"yPAEMA,EAAc,WAChB,OACI,gCACA,+BACA,sCACA,2CAKEC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACA,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACA,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJSA,MASb,OAAO,gCAAQJ,KAgBAS,EAXL,SAACV,GAEX,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACI,kCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCoB3DE,E,kDArDX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAUVY,aAAe,SAAAC,GACX,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKV,EAAQS,KAfE,EAmBnBE,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eApBvB,EAAKA,aAAe,CAChBf,KAAM,GACNC,IAAK,IAGT,EAAKa,MAAQ,EAAKC,aARC,E,0CA0BnB,WACI,MAAsBC,KAAKF,MAAnBd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACA,uBAAMgB,SAAUD,KAAKL,aAArB,UACI,uBAAOO,IAAI,OAAX,kBACA,uBACIC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHX,MAAOT,EACPqB,SAAUL,KAAKV,eACnB,uBAAOY,IAAI,MAAX,iBACA,uBACIC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHX,MAAOR,EACPoB,SAAUL,KAAKV,eACnB,wBAAQa,KAAK,SAAb,2B,GA9COG,IAAMC,WCwCVC,E,4MApCXV,MAAQ,CACJW,WAAY,I,EAGhBtB,gBAAkB,SAAAJ,GACd,IAAQ0B,EAAe,EAAKX,MAApBW,WAEZ,EAAKf,SAAS,CACVe,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM7B,Q,EAKrBc,aAAe,SAAAc,GACX,EAAKjB,SAAS,CAACe,WAAW,GAAD,mBAAM,EAAKX,MAAMW,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAQF,EAAeT,KAAKF,MAApBW,WAEJ,OACI,sBAAKI,UAAU,YAAf,UACI,gDACA,oFACJ,cAAC,EAAD,CACCjC,cAAe6B,EACftB,gBAAiBa,KAAKb,kBAEvB,yCACA,cAAC,EAAD,CAAMU,aAAcG,KAAKH,sB,GAhCvBS,IAAMC,W,MCCxBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1ae85da.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () =>  {\n    return (\n        <thead>\n        <tr>\n        <th>Name</th>\n        <th>Job</th>\n        </tr>\n        </thead>\n        )\n    }\n    const TableBody = (props) => {\n        const rows = props.characterData.map((row, index) => {\n            return(\n                <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n                </tr>\n                )\n            })\n            return <tbody>{rows}</tbody>\n            \n        }\n        \n        \n        const Table = (props) => {\n            \n            const {characterData, removeCharacter} = props\n            \n            return(\n                <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n                </table>\n                )\n            }\n            export default Table","import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n    this.initialState = {\n        name: '',\n        job: ''\n    };\n\n    this.state = this.initialState;\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name] : value\n        });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state;\n        \n        return (\n        <form onSubmit={this.onFormSubmit}>\n            <label for=\"name\">Name</label>\n            <input \n                type=\"text\" \n                name=\"name\"\n                id=\"name\" \n                value={name} \n                onChange={this.handleChange} />\n            <label for=\"job\">Job</label>\n            <input \n                type=\"text\" \n                name=\"job\" \n                id=\"job\"\n                value={job} \n                onChange={this.handleChange} />\n            <button type=\"submit\">\n                Submit\n            </button>\n        </form>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends React.Component {\n\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n\n    this.setState({\n        characters: characters.filter((character, i) => {\n            return i !== index;\n        })\n    });\n    }\n\n    handleSubmit = character => {\n        this.setState({characters: [...this.state.characters, character]});\n    }\n\n    render() {\n        const { characters } = this.state;\n\n            return ( \n                <div className=\"container\">\n                    <h1>React Tutorial</h1>\n                    <p>Add a character with a name and a job to the table.</p>\n                <Table\n                 characterData={characters}\n                 removeCharacter={this.removeCharacter}\n                 />\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n                </div>\n                );\n        }\n    }\n    \nexport default App;    ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n    \nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}